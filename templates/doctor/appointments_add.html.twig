{% extends 'doctor/appointments.html.twig' %}

{% block content %}
<h2 class="text-xl font-bold text-dark-gray mb-6">Ajouter un rendez-vous</h2>

{# <div class="bg-white shadow-lg rounded-lg p-6 mb-8">
  <h3 class="text-lg font-semibold text-dark-gray mb-4">Ajout individuel</h3>
  <form action="{{ path('app_doctor_appointments_add') }}" method="POST" class="flex flex-col gap-4">
    <div>
      <label for="date" class="block text-sm font-medium text-gray-700 mb-1">Date et Heure</label>
      <input 
        type="datetime-local" 
        id="date" 
        name="date" 
        required 
        class="p-3 border border-gray-300 rounded-md w-full cursor-pointer">
    </div>
    <button type="submit" class="bg-dark-blue text-white py-2 px-4 rounded hover:bg-off-blue">
      Ajouter
    </button>
  </form>
</div> #}

<div class="bg-white shadow-lg rounded-lg p-6 border-2 border-dotted border-gray-400">
  <h3 class="text-lg font-semibold text-dark-gray mb-4">Ajout en s√©rie</h3>
  {{ form_start(bulkForm, {'attr': {'class': 'flex flex-col gap-4'}}) }}
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        {{ form_label(bulkForm.start_date) }}
        {{ form_widget(bulkForm.start_date) }}
        {{ form_errors(bulkForm.start_date) }}
      </div>
      <div>
        {{ form_label(bulkForm.end_date) }}
        {{ form_widget(bulkForm.end_date) }}
        {{ form_errors(bulkForm.end_date) }}
      </div>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        {{ form_label(bulkForm.start_time) }}
        {{ form_widget(bulkForm.start_time) }}
        {{ form_errors(bulkForm.start_time) }}
      </div>
      <div>
        {{ form_label(bulkForm.end_time) }}
        {{ form_widget(bulkForm.end_time) }}
        {{ form_errors(bulkForm.end_time) }}
      </div>
    </div>
    
    <div>
      {{ form_label(bulkForm.duration) }}
      {{ form_widget(bulkForm.duration) }}
      {{ form_errors(bulkForm.duration) }}
    </div>
    
    <div class="mt-2">
      {{ form_label(bulkForm.weekdays, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-2'}}) }}
        <div class="flex flex-wrap gap-4">
          {% for child in bulkForm.weekdays %}
            <div class="flex items-center">
              {{ form_widget(child, {
                'attr': {'class': 'h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded'}
              }) }}
              {{ form_label(child, null, {'label_attr': {'class': 'ml-2 text-sm text-gray-700'}}) }}
            </div>
          {% endfor %}
        </div>
      {{ form_errors(bulkForm.weekdays) }}
    </div>
    
    <div class="flex justify-end">
      {{ form_widget(bulkForm.submit) }}
    </div>
  {{ form_end(bulkForm) }}
</div>

<script>
  // Ensure clicking anywhere on the input opens the calendar
  document.addEventListener('DOMContentLoaded', function() {
    // Remove any existing listeners first
    document.removeEventListener('click', handleInputClick);
    document.removeEventListener('focus', handleInputFocus);
    
    // Add event delegation for clicks
    document.addEventListener('click', handleInputClick);
    document.addEventListener('focus', handleInputFocus, true);
    
    // Also set cursor style for all date/time inputs
    const allInputs = document.querySelectorAll('input[type="date"], input[type="time"]');
    allInputs.forEach(input => {
      input.style.cursor = 'pointer';
    });
  });
  
  function handleInputClick(e) {
    const target = e.target;
    if (target.type === 'date' || target.type === 'time') {
      target.focus();
      setTimeout(() => {
        if (target.showPicker) {
          try {
            target.showPicker();
          } catch (error) {
            // Silently fail
          }
        }
      }, 50);
    }
  }
  
  function handleInputFocus(e) {
    const target = e.target;
    if (target.type === 'date' || target.type === 'time') {
      setTimeout(() => {
        if (target.showPicker) {
          try {
            target.showPicker();
          } catch (error) {
            // Silently fail
          }
        }
      }, 50);
    }
  }
</script>
{% endblock %}